// <auto-generated />
using System;
using CdPo.Web.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CdPo.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CdPo.Model.Entities.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Discipline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ControlForm")
                        .HasColumnType("integer");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EducationForm")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Staff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.Property<long?>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.Property<long?>("PersonId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PersonId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CdPo.Model.Entities.TrainingCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("DisciplineId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ObjectCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObjectEditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectVersion")
                        .HasColumnType("integer");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TrainingStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TrainingCourses");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Contract", b =>
                {
                    b.HasOne("CdPo.Model.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Staff", b =>
                {
                    b.HasOne("CdPo.Model.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CdPo.Model.Entities.Student", b =>
                {
                    b.HasOne("CdPo.Model.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CdPo.Model.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Group");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CdPo.Model.Entities.TrainingCourse", b =>
                {
                    b.HasOne("CdPo.Model.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("CdPo.Model.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CdPo.Model.Entities.Staff", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
